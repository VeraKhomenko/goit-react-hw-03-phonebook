{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Container/Container.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","style","container","ContactListItem","id","listItem","onDeleteContact","item","map","value","text","shortid","generate","type","button","onClick","ContactList","contactList","form","dataContact","Object","values","Form","state","name","number","nameInputId","numberInputId","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","label","pattern","title","required","onChange","Component","Filter","input","App","contacts","filter","addFilterContact","data","find","contact","alert","newContact","prevState","changeFilter","handleDeleteContact","idContact","getVisibleContacts","normalizedContactName","toLowerCase","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5acbfae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__132EV\",\"text\":\"ContactListItem_text__l4cc_\",\"button\":\"ContactListItem_button__19cGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__38pzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactList_form__3JCWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__vka7y\",\"label\":\"Form_label__2-VZW\",\"text\":\"Form_text__I_MVT\",\"button\":\"Form_button__nTeUQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport style from './ContactListItem.module.css';\r\nimport shortid from 'shortid';\r\n\r\nconst ContactListItem = ({ id, listItem, onDeleteContact }) => (\r\n\t<li className={style.item}>\r\n\t\t{listItem.map(value => (\r\n\t\t\t<span className={style.text} key={shortid.generate()}>\r\n\t\t\t\t{value}\r\n\t\t\t</span>\r\n\t\t))}\r\n\t\t<button\r\n\t\t\ttype=\"button\"\r\n\t\t\tclassName={style.button}\r\n\t\t\tonClick={() => onDeleteContact(id)}\r\n\t\t>\r\n\t\t\t<p>Delete</p>\r\n\t\t</button>\r\n\t</li>\r\n\r\n);\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport style from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem'\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n\t<ul className={style.form}>\r\n\t\t{contactList.map(({ id, ...dataContact }) => (\r\n\t\t\t<ContactListItem\r\n\t\t\t\tkey={id}\r\n\t\t\t\tid={id}\r\n\t\t\t\tlistItem={Object.values(dataContact)}\r\n\t\t\t\tonDeleteContact={onDeleteContact}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</ul>\r\n\r\n);\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport style from './Form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t}\r\n\tnameInputId = shortid.generate();\r\n\tnumberInputId = shortid.generate();\r\n\r\n\thandleChange = e => {\r\n\t\tconst { name, value } = e.currentTarget;\r\n\r\n\t\tthis.setState({ [ name ]: value });\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onSubmit(this.state);\r\n\t\tthis.reset();\r\n\t};\r\n\r\n\treset = () => {\r\n\t\tthis.setState({ name: '', number: '', });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSubmit} className={style.form} >\r\n\t\t\t\t<label htmlFor={this.nameInputId} className={style.label}>\r\n\t\t\t\t\t<p className={style.text}>Name</p> <input\r\n\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\tid={this.nameInputId}\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label htmlFor={this.numberInputId} className={style.label}>\r\n\t\t\t\t\t<p className={style.text}>Number</p> <input\r\n\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tvalue={this.state.number}\r\n\t\t\t\t\t\tid={this.numberInputId}\r\n\t\t\t\t\t\tpattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<button type=\"submit\" className={style.button}>Add contact</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n\t<div className={style.form} >\r\n\t\t<label className={style.label} htmlFor=\"\">\r\n\t\t\t<p className={style.text}>Find contacts by name:</p>\r\n\t\t\t<input\r\n\t\t\t\tclassName={style.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t</div>\r\n\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\n\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n  addFilterContact = data => {\n    if (this.state.contacts.find(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n\n    };\n    this.setState(prevState => ({\n      contacts: [ ...prevState.contacts, newContact ],\n    }));\n  }\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  handleDeleteContact = idContact => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== idContact),\n    }));\n  };\n\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedContactName = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContactName),\n    );\n\n  };\n\n  componentDidMount() {\n    console.log('Add componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Add componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле контактов');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addFilterContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          contactList={visibleContacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </Container>\n    )\n  }\n};\nexport default App;\n\n// componentDidUpdate - не использовать в стрелочной ф-ции,\n// componentDidUpdate - вызывается после каждого обновления\n//  ! componentDidUpdate если в нем делаем setState использовать условие что бы не зациклить компонент\n// componentDidMount - для того что бы взять какие-то начальные данные\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3zk9D\",\"label\":\"Filter_label__1wavD\",\"text\":\"Filter_text__1T-x6\"};"],"sourceRoot":""}